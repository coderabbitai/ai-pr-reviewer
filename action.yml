name: 'OpenAI-based PR Reviewer & Summarizer'
description: 'OpenAI-based PR Reviewer and Summarizer'
branding:
  icon: 'aperture'
  color: 'orange'
author: 'FluxNinja, Inc.'
inputs:
  debug:
    required: false
    description: 'Enable debug mode'
    default: 'false'
  max_files:
    required: false
    description: 'Max files to review. Less than or equal to 0 means no limit.'
    default: '40'
  temperature:
    required: false
    description: 'Temperature for GPT model'
    default: '0.0'
  review_comment_lgtm:
    required: false
    description: 'Leave comments even if the patch is LGTM'
    default: 'false'
  path_filters:
    required: false
    description: |
      The path filters, e.g., "src/**.py", "!dist/**", each line will be considered as one pattern.
      See also

      - https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onpushpull_requestpull_request_targetpathspaths-ignore
      - https://github.com/isaacs/minimatch
    default: |
      !dist/**
      !*.pb.go
      !*.lock
      !*.yaml
      !*.yml
      !*.cfg
      !*.toml
      !*.ini
      !*.mod
      !*.sum
      !*.json
      !*.mmd
      !*.svg
      !*.png
      !*.dot
      !**/gen/**
      !**/_gen/**
      !**/vendor/**
  system_message:
    required: false
    description: 'System message to be sent to OpenAI'
    default: |
      You are a highly experienced software engineer with a strong ability to 
      review code changes thoroughly.You can uncover issues such as logic 
      errors, syntax errors, out of bound errors, potential data races, 
      livelocks, starvation, suspension, order violation, atomicity violation, 
      consistency, complexity, error handling, and more.

      We will be conducting code reviews today.
  summarize_beginning:
    required: false
    description: 'The prompt for the whole pull request'
    default: |
      $system_message

      In this session, we will summarize a pull request. 

      Please provide a bullet point list containing the filename and a short 
      summary (within 30 words) for each file's diff.

      The pull request has the title "$title" and the following description:

      ```
      $description
      ```

      I will provide diffs for each file to be summarized. In every response, 
      update the bullet point list with each file's diff summary.

      Reply "OK" to confirm that you are ready to receive the diffs for 
      summarization.

  summarize_file_diff:
    required: false
    description: 'The prompt for each file diff'
    default: |
      Here is the summary you generated for the other files, which you can use as a basis for your response:

      ```
      $summary
      ```

      Now, please summarize the diff for `$filename`. Add the summary for 
      this file to the bullet point list. 

      ```diff
      $file_diff
      ```
  summarize:
    required: false
    description: 'The prompt for final summarization response'
    default: |
      This is the end of the summarization session. Here is the summary you have generated so far in our previous conversations:

      ```
      $summary
      ```

      Please provide your final response in the `markdown` format with 
      the following content:
        - Thank the user for letting you participate in the code review.
        - High-level summary (focus on the purpose and intent within 80 words)
        - Your feedback to the developer (within 50 words)
        - Table of files and their summaries

      Avoid additional commentary as this summary will be added as a comment on the pull request.
  summarize_release_notes:
    required: false
    description: 'The prompt for generating release notes'
    default: |
      Create concise release notes in `markdown` format for this pull request, 
      focusing on its purpose and user story. Classify the changes as "New Feature", 
      "Bug fix", "Documentation", "Refactor", "Style", "Test", "Chore", 
      "Revert", and provide a bullet point list. For example: 
      "New Feature: An integrations page was added to the UI". Keep your 
      response within 50-100 words.

      Avoid additional commentary as this response will be used as is in our release notes.
  review_beginning:
    required: false
    description: 'The beginning prompt of a code review dialog'
    default: |
      $system_message

      I will provide you with some files and the entire diff to help you build 
      context, unless the content is too large. Then, I will send you each patch 
      from the diff for review.

      The pull request has the title "$title" and the following description:

      ```
      $description
      ```

      The OpenAI-generated summary is as follows:

      ```
      $summary
      ```

      Reply "OK" to confirm that you are ready for further instructions.
  review_file:
    required: false
    description: 'The prompt for each file'
    default: |
      Here is the content of `$filename` for context. Please use this context 
      when reviewing patches.

      ```
      $file_content
      ```
  review_file_diff:
    required: false
    description: 'The prompt for each file diff'
    default: |
      Here is the entire diff for `$filename` for context. Please use this context 
      when reviewing patches.

      ```diff
      $file_diff
      ```
  review_patch_begin:
    required: false
    description: 'The prompt for each file diff'
    default: |
      Next, I will send you a series of patches. Each patch consists of a diff snippet, 
      and your task is to briefly review every patch. Identify any bug risks or provide 
      improvement suggestions. If the patch looks good and acceptable, please reply 
      "LGTM!" with a short comment within 30 words. 

      Your responses will be recorded as review comments on the pull request. 
      Markdown format is preferred for your responses. Reply "OK" to confirm.
  review_patch:
    required: false
    description: 'The prompt for each chunks/patches'
    default: |
      $filename

      ```diff
      $patch
      ```
runs:
  using: 'node16'
  main: 'dist/index.js'
