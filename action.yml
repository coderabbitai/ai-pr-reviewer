name: 'OpenAI ChatGPT based PR Reviewer & Summarizer'
description: 'OpenAI ChatGPT based PR Reviewer and Summarizer'
branding:
  icon: 'aperture'
  color: 'orange'
author: 'FluxNinja, Inc.'
inputs:
  debug:
    required: false
    description: 'Enable debug mode'
    default: 'false'
  max_files_to_summarize:
    required: false
    description:
      'Max files to summarize. Less than or equal to 0 means no limit.'
    default: '40'
  max_files_to_review:
    required: false
    description: 'Max files to review. Less than or equal to 0 means no limit.'
    default: '0'
  review_comment_lgtm:
    required: false
    description: 'Leave comments even if the patch is LGTM'
    default: 'false'
  path_filters:
    required: false
    description: |
      The path filters, e.g., "src/**.py", "!dist/**", each line will be considered as one pattern.
      See also

      - https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onpushpull_requestpull_request_targetpathspaths-ignore
      - https://github.com/isaacs/minimatch
    default: |
      !dist/**
      !**/*.pb.go
      !**/*.lock
      !**/*.yaml
      !**/*.yml
      !**/*.cfg
      !**/*.toml
      !**/*.ini
      !**/*.mod
      !**/*.sum
      !**/*.work
      !**/*.json
      !**/*.mmd
      !**/*.svg
      !**/*.png
      !**/*.dot
      !**/*.md5sum
      !**/*.wasm
      !**/gen/**
      !**/_gen/**
      !**/generated/**
      !**/vendor/**
  summary_only:
    required: false
    description: 'Only provide the summary and skip the code review.'
    default: 'false'
  openai_light_model:
    required: false
    description:
      'Model to use for simple tasks like summarizing diff on a file.'
    default: 'gpt-3.5-turbo'
  openai_heavy_model:
    required: false
    description: 'Model to use for complex tasks such as code reviews.'
    default: 'gpt-3.5-turbo'
  openai_model_temperature:
    required: false
    description: 'Temperature for GPT model'
    default: '0.0'
  openai_retries:
    required: false
    description:
      'How many times to retry OpenAI API in case of timeouts or errors?'
    default: '5'
  openai_timeout_ms:
    required: false
    description: 'Timeout for OpenAI API call in millis'
    default: '120000'
  openai_concurrency_limit:
    required: false
    description: 'How many concurrent API calls to make to OpenAI servers?'
    default: '4'
  system_message:
    required: false
    description: 'System message to be sent to OpenAI'
    default: |
      You are `@openai` (aka `github-actions[bot]`), a language model 
      trained by OpenAI. You have been designed to act as a highly 
      experienced software engineer today.
  summarize_file_diff:
    required: false
    description: 'The prompt for the whole pull request'
    default: |
      GitHub pull request title - 
      `$title` 

      Here is the description -
      ```
      $description
      ```

      Here is the content of file `$filename` -
      ```
      $file_content
      ```

      Here is the diff -
      ```diff
      $file_diff
      ```

      I would like you to summarize the diff within 50 words.
  summarize:
    required: false
    description: 'The prompt for final summarization response'
    default: |
      Here is the summary of changes you have generated for each file -
      ```
      $summary
      ```

      Provide your final response in the `markdown` format with 
      the following content -
        - Thank the user for letting you participate in the code review. 
        - High-level summary (comment on the overall change instead of 
          specific files within 80 words)
        - Table of files and their summaries. You can group files with 
          similar changes together into one row to save space.

      Avoid additional commentary as this summary will be added as a 
      comment on the GitHub pull request.
  summarize_release_notes:
    required: false
    description:
      'The prompt for generating release notes in the same chat as summarize
      stage'
    default: |
      Create concise release notes in `markdown` format for this pull request, 
      focusing on its purpose and user story. You can classify the changes as 
      "New Feature", "Bug fix", "Documentation", "Refactor", "Style", 
      "Test", "Chore", "Revert", and provide a bullet point list. For example: 
      "New Feature: An integrations page was added to the UI". Keep your 
      response within 50-100 words. Avoid additional commentary as this response 
      will be used as is in our release notes.

      Below the release notes, generate a short, celebratory poem about the 
      changes in this PR and add this poem as a quote (> symbol). You can 
      use emojis in the poem, where they are relevant.
  review_file_diff:
    required: false
    description: 'The prompt for each file'
    default: |
      GitHub pull request title - 
      `$title` 

      Here is the description -
      ```
      $description
      ```

      Here is the OpenAI generated summary -
      ```
      $summary
      ```

      Here is the content of file `$filename` -
      ```
      $file_content
      ```

      Format for changes and review comments (if any) -

        ```new_hunk
        <new code with line numbers>
        ```

        ```old_hunk
        <old code>
        ```

        ```comment_chain
        <existing review comments>
        ```
        ---
        ...

      Changes for review -
      $patches

      Reflect on the provided code thoroughly and identify substantive  
      bug risks or provide improvement suggestions in these changes. 
      You will point out issues such as security, logic errors, 
      syntax errors, out of bound errors, data races, consistency, 
      complexity, error handling, typos, grammar, maintainability, 
      performance, and so on.

      Your response must consist of comments in the below format 
      with a separator between review comments. The format consists of 
      line number range and review comment applicable for that line 
      number range. Any other commentary outside of this format will be 
      ignored and will not be read by the parser. You can make multiple 
      comments for each hunk. It's important that line number 
      ranges for each review must be within line number range of new_hunks. 
      Don't echo back the code provided to you as the 
      line number range is sufficient to map your comment to the relevant code 
      section in GitHub. Markdown format is preferred for text. Fenced code 
      blocks should be used for new code and replacement code suggestions. 
      Replacement code suggestions must be complete, correctly formatted and 
      most importantly, map exactly to the line number ranges that need to 
      be replaced. If there are no issues or suggestions and the hunk is 
      acceptable as-is, your comment on the line ranges must include the
      word 'LGTM!'.

        <start_line_number>-<end_line_number>:
        <review markdown>
        ```suggestion
        <code that replaces everything between start_line_number and end_line_number>
        ```
        ---
        <start_line_number>-<end_line_number>:
        <review markdown>
        ---
        <start_line_number>-<end_line_number>:
        <review markdown>
        ```<language>
        <new code suggestion>
        ```
        ...

      Examples -

        1-5:
        LGTM!
        ---
        6-6:
        ```suggestion
        print "Hello!"
        ```
        ---

  comment:
    required: false
    description: 'Prompt for comment'
    default: |
      A comment was made on a GitHub pull request review for a 
      diff hunk on file `$filename`. I would like you to follow 
      the instructions in that comment. 

      Here is the title -
      `$title`

      Here is the description-
      ```
      $description
      ```

      Here is the OpenAI generated summary -
      ```
      $summary
      ```

      Here is the content of file -
      ```
      $file_content
      ```

      Here is the entire diff -
      ```diff
      $file_diff
      ```

      Here is diff being commented on -
      ```diff
      $diff
      ```

      The format of the conversation chain is -
      `user: comment`

      Conversation chain (including the new comment) -
      ```
      $comment_chain
      ```

      Please reply directly to the new comment (instead of suggesting 
      a reply) and your reply will be posted as-is.

      If the comment contains instructions/requests for you, please comply. 
      For example, if the comment is asking you to generate documentation 
      comments on the code, in your reply please generate the required code.

      In your reply, please make sure to begin the reply by tagging the user 
      with "@user".

      The comment/request that you need to directly reply to -
      ```
      $comment
      ```
runs:
  using: 'node16'
  main: 'dist/index.js'
