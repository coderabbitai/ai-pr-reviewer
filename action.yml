name: 'chatgpt-action'
description: 'A collection of ChatGPT assistants, e.g., code viewer, labeler, assigner, etc.'
author: 'Tao He'
inputs:
  debug:
    type: boolean
    required: false
    description: 'Enable debug mode'
    default: false
  path_filters:
    type: string
    required: false
    description: |
      The path filters, e.g., "src/**.py", "!dist/**", each line will be considered as one pattern.
      See also

      - https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onpushpull_requestpull_request_targetpathspaths-ignore
      - https://github.com/isaacs/minimatch
    default: |
      !dist/**
      **/package-lock.json
  system_message:
    type: string
    required: false
    description: 'System message to be sent to ChatGPT'
    default: |
      You are a very experienced software engineer. You are able to thoroughly review code and uncover 
      issues, such as potential data races, livelocks, starvation, suspension, order violation, 
      atomicity violation, consistency issues, complexity issues and so on. 

      We will be doing code reviews today. Please prefer markdown format in your responses.
  chatgpt_reverse_proxy:
    type: boolean
    required: false
    description: |
      The URL of the chatgpt reverse proxy, see also https://github.com/transitive-bullshit/chatgpt-api#reverse-proxy
    default: https://chat.duti.tech/api/conversation
  review_comment_lgtm:
    type: boolean
    required: false
    description: 'Leave comments even the patch is LGTM'
    default: false
  review_beginning:
    type: string
    required: false
    description: 'The beginning prompt of a code review dialog'
    default: |
      I will be providing you some files and entire diff to help you build
      context, in case the content is not too large. Then I will be sending you each patch
      from the diff for review.

      I have a pull request with title "$title" and the description is as follows,

      > $description.

      Reply "OK" to confirm that you are ready for further instructions.
  review_file:
    type: string
    required: false
    description: 'The prompt for each file'
    default: |
      Providing `$filename` content as context. Reply "OK" to confirm.

      ```
      $file_content
      ```
  review_file_diff:
    type: string
    required: false
    description: 'The prompt for each file diff'
    default: |
      Providing entire diff for `$filename` as context. Reply "OK" to confirm.

      ```diff
      $file_diff
      ```
  review_patch_begin:
    type: string
    required: false
    description: 'The prompt for each file diff'
    default: |
      Next, I will send you a series of patches, each of them consists 
      of a snippet, and you need to do a brief code review for every message, and tell me any 
      bug risk and improvement suggestion. If the patch is looks good and acceptable, please 
      reply "LGTM!" with a short comment with 30 words. 

      Your answer should be concise. Don't include the diff in your comment, and markdown 
      format is preferred. Reply "OK" to confirm.
  review_patch:
    type: string
    required: false
    description: 'The prompt for each chunks/patches'
    default: |
      $filename

      ```diff
      $patch
      ```
  scoring_beginning:
    type: string
    required: false
    description: 'The prompt for the whole pull request'
    default: |
      We will be scoring a pull request in this session. 

      You will need provide -
      1. Overall Score
      2. Overall Summary (within 50 words)
      3. Table of Filename, Score and Summary (within 20 words) for each file's diff

      I have a pull request with title "$title" and the description is as follows,

      > $description.

      I will be providing you some files and diff for each file to help you build
      context and score the diffs, in case their content is not too large. In every response, you will update 
      the overall score, summary of the entire pull request, and the table for each file's score.

      Reply "OK" to confirm that you are ready to receive the contents of files and score their diffs.
  scoring_file:
    type: string
    required: false
    description: 'The prompt for each file'
    default: |
      Providing `$filename` content as context. Reply "OK" to confirm.

      ```
      $file_content
      ```
  scoring_file_diff:
    type: string
    required: false
    description: 'The prompt for each file diff'
    default: |
      Providing entire diff for `$filename`.

      I would like you to score the diff, the score should be a number between 0 and 100
      and 85 means the the pull request is basically acceptable. e.g., "85", and a comment 
      within 20 words. You will add the score for this file and your comment in the table. 

      In response, please provide the updated overall summary, overall score and the score table 
      for files we have reviewed so far.

      ```diff
      $file_diff
      ```
  scoring:
    type: string
    required: false
    description: 'The prompt for the whole diff for scoring'
    default: |
      The diff is as follows:

      ```diff
      $diff
      ```
runs:
  using: 'node16'
  main: 'dist/index.js'
